{"version":3,"file":"xterm.js","mappings":"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","sources":["webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._announceCharacters.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._liveRegionDebouncer);\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(toDisposable(() => this._accessibilityContainer.remove()));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange, IBufferElementProvider } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration, IBufferElementProvider } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["AccessibilityManager","Disposable","constructor","_terminal","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_liveRegion","setAttribute","appendChild","_liveRegionDebouncer","register","TimeBasedDebouncer","_announceCharacters","bind","element","Error","insertAdjacentElement","onRender","e","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","toDisposable","remove","i","MAX_ROWS_TO_READ","length","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","push","refresh","rows","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","style","width","height","zIndex","focus","selectionService","clipboardData","setData","selectionText","preventDefault","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","addEventListener","disposed","dispose","removeEventListener","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","onResize","_clearCurrentLink","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_renderService","addDisposableDomListener","_handleMouseMove","_handleMouseDown","_handleMouseUp","position","_positionFromMouseEvent","composedPath","target","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","buffer","ydisp","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","lines","result","linkHandler","rawOptions","cell","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","window","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","ScreenDprMonitor","_currentDevicePixelRatio","devicePixelRatio","clearListener","setListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","removeChild","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","dimensions","css","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","tabIndex","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","scrollLines","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","onDimensionsChange","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","self","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","canvas","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","translateBufferLineToString","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_rowElements","_cellToRowElements","_rowContainer","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","pop","handleCharSizeChanged","children","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","lineData","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","toString","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","getAttribute","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_renderRows","_screenDprMonitor","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","a","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","unshift","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","onDispose","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}